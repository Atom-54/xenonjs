{
  "version": 3,
  "sources": ["../xen-template.js", "../xen-state.js", "../xen-element.js", "../xen-base.js", "../xen-debug.js", "../xen.js", "../xen-async.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2016 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/* Annotator */\n// tree walker that generates arbitrary data using visitor function `cb`\n// `cb` is called as `cb(node, key, notes)`\n// where\n//   `node` is a visited node.\n//   `key` is a handle which identifies the node in a map generated by `Annotator.locateNodes`.\nclass Annotator {\n  constructor(cb) {\n    this.cb = cb;\n  }\n  // For subtree at `node`, produce annotation object `notes`.\n  // the content of `notes` is completely determined by the behavior of the\n  // annotator callback function supplied at the constructor.\n  annotate(node, notes, opts) {\n    this.notes = notes;\n    this.opts = opts || 0;\n    this.key = this.opts.key || 0;\n    notes.locator = this._annotateSubtree(node);\n    return notes;\n  }\n  // walking subtree at `node`\n  _annotateSubtree(node) {\n    let childLocators;\n    for (let i = 0, child = node.firstChild, previous = null, neo; child; i++) {\n      // returns a locator only if a node in the subtree requires one\n      const childLocator = this._annotateNode(child);\n      // only when necessary, maintain a sparse array of locators\n      if (childLocator) {\n        (childLocators = childLocators || {})[i] = childLocator;\n      }\n      // `child` may have been evacipated by visitor\n      neo = previous ? previous.nextSibling : node.firstChild;\n      if (neo === child) {\n        previous = child;\n        child = child.nextSibling;\n      } else {\n        child = neo;\n        i--;\n      }\n    }\n    // is falsey unless there was at least one childLocator\n    return childLocators;\n  }\n  _annotateNode(node) {\n    // visit node\n    const key = this.key++;\n    const shouldLocate = this.cb(node, key, this.notes, this.opts);\n    // recurse\n    const locators = this._annotateSubtree(node);\n    if (shouldLocate || locators) {\n      const cl = Object.create(null);\n      cl.key = key;\n      if (locators) {\n        cl.sub = locators;\n      }\n      return cl;\n    }\n  }\n}\n\nconst locateNodes = function(root, locator, map) {\n  map = map || [];\n  for (const n in locator) {\n    const loc = locator[n];\n    if (loc) {\n      const node = root.childNodes[n];\n      // TODO(sjmiles): text-nodes sometimes evacipate when stamped, so map to the parentElement instead\n      map[loc.key] = (node.nodeType === Node.TEXT_NODE) ? node.parentElement : node;\n      if (loc.sub) {\n        // recurse\n        locateNodes(node, loc.sub, map);\n      }\n    }\n  }\n  return map;\n};\n\n/* Annotation Producer */\n// must return `true` for any node whose key we wish to track\nconst annotatorImpl = function(node, key, notes, opts) {\n  let tracking = false;\n  // hook\n  if (opts.annotator && opts.annotator(node, key, notes, opts)) {\n    tracking = true;\n  }\n  // default\n  switch (node.nodeType) {\n    case Node.DOCUMENT_FRAGMENT_NODE:\n      break;\n    case Node.ELEMENT_NODE:\n      return tracking || annotateElementNode(node, key, notes);\n    case Node.TEXT_NODE:\n      return tracking || annotateTextNode(node, key, notes);\n  }\n  return tracking;\n};\n\nconst annotateTextNode = function(node, key, notes) {\n  if (annotateMustache(node, key, notes, 'textContent', node.textContent)) {\n    node.textContent = '';\n    return true;\n  }\n};\n\nconst annotateElementNode = function(node, key, notes) {\n  if (node.hasAttributes()) {\n    let noted = false;\n    for (let a$ = node.attributes, i = a$.length - 1, a; i >= 0 && (a = a$[i]); i--) {\n      if (\n        annotateEvent(node, key, notes, a.name, a.value) ||\n        annotateMustache(node, key, notes, a.name, a.value) ||\n        annotateDirective(node, key, notes, a.name, a.value)\n      ) {\n        node.removeAttribute(a.name);\n        noted = true;\n      }\n    }\n    return noted;\n  }\n};\n\nconst annotateMustache = function(node, key, notes, property, mustache) {\n  if (mustache.slice(0, 2) === '{{') {\n    if (property === 'class') {\n      property = 'className';\n    }\n    let value = mustache.slice(2, -2);\n    // TODO(sjmiles): MWDC components use event-names of the form `MDCTabBar:activated`, which breaks the usage\n    // of `:` as delimiter. So, instead of `on-faux=\"MDCTabBar:activated:onActivated\"` support\n    // `on-faux=\"MDCTabBar:activated=onActivated\"`\n    const delim = mustache.includes('=') ? '=' : ':';\n    const override = value.split(delim);\n    if (override.length === 2) {\n      property = override[0];\n      value = override[1];\n    }\n    takeNote(notes, key, 'mustaches', property, value);\n    if (value[0] === '$') {\n      takeNote(notes, 'xlate', value, true);\n    }\n    return true;\n  }\n};\n\nconst annotateEvent = function(node, key, notes, name, value) {\n  if (name.slice(0, 3) === 'on-') {\n    if (value.slice(0, 2) === '{{') {\n      value = value.slice(2, -2);\n      console.warn(\n        `Xen: event handler for '${name}' expressed as a mustache, which is not supported. Using literal value '${value}' instead.`\n      );\n    }\n    takeNote(notes, key, 'events', name.slice(3), value);\n    return true;\n  }\n};\n\nconst annotateDirective = function(node, key, notes, name, value) {\n  if (name === 'xen:forward') {\n    takeNote(notes, key, 'events', 'xen:forward', value);\n    return true;\n  }\n};\n\nconst takeNote = function(notes, key, group, name, note) {\n  const n$ = notes[key] || (notes[key] = Object.create(null));\n  (n$[group] || (n$[group] = {}))[name] = note;\n};\n\nconst annotator = new Annotator(annotatorImpl);\n\nconst annotate = function(root, key, opts) {\n  return (root._notes ||\n    (root._notes = annotator.annotate(root.content, {/*ids:{}*/}, key, opts))\n  );\n};\n\n/* Annotation Consumer */\nconst mapEvents = function(notes, map, mapper) {\n  // add event listeners\n  for (const key in notes) {\n    const node = map[key];\n    const events = notes[key] && notes[key].events;\n    if (node && events) {\n      for (const event in events) {\n        let name = event;\n        let value = events[name];\n        // TODO(sjmiles): MWDC components use event-names of the form `MDCTabBar:activated`, support\n        // `on-faux=\"MDCTabBar:activated=onActivated\"`.\n        // I thought we had this feature already, not sure what happened.\n        if (value.includes('=')) {\n          [name, value] = value.split('=');\n        }\n        mapper(node, name, value);\n      }\n    }\n  }\n};\n\nconst listen = function(controller, node, eventName, handlerName) {\n  node.addEventListener(eventName, function(e) {\n    if (controller[handlerName]) {\n      return controller[handlerName](e, e.detail);\n    } else if (controller.defaultHandler) {\n      return controller.defaultHandler(handlerName, e);\n    }\n  });\n};\n\nconst set = function(notes, map, scope, controller) {\n  if (scope) {\n    for (const key in notes) {\n      const node = map[key];\n      if (node) {\n        // everybody gets a scope\n        node.scope = scope;\n        // now get your regularly scheduled bindings\n        const mustaches = notes[key].mustaches;\n        for (const name in mustaches) {\n          const property = mustaches[name];\n          if (property in scope) {\n            _set(node, name, scope[property], controller);\n          }\n        }\n      }\n    }\n  }\n};\n\nconst _set = function(node, property, value, controller) {\n  // TODO(sjmiles): the property conditionals here could be precompiled\n  const modifier = property.slice(-1);\n  if (property === 'style%' || property === 'style' || property === 'xen:style') {\n    if (typeof value === 'string') {\n      node.style.cssText = value;\n    } else {\n      Object.assign(node.style, value);\n    }\n  } else if (modifier == '$') {\n    const n = property.slice(0, -1);\n    if (typeof value === 'boolean' || value === undefined || value === null) {\n      setBoolAttribute(node, n, Boolean(value));\n    } else {\n      node.setAttribute(n, value);\n    }\n  } else if (property === 'textContent') {\n    if (value?.$template || value?.template || Array.isArray(value) || value?.models) {\n      _setSubTemplate(node, value, controller);\n    } else {\n      const isPrimitiveValue = value !== null && value !== undefined && (typeof value !== 'object') && (typeof value !== 'function');\n      node.textContent = isPrimitiveValue ? value : '';\n    }\n  } else if (property === 'unsafe-html') {\n    node.innerHTML = value || '';\n  } else if (property === 'value') {\n    // TODO(sjmiles): specifically dirty-check `value` to avoid resetting input elements\n    if (node.value !== value) {\n      node.value = value;\n    }\n  }\n  // TODO(sjmiles): hack for image elements, needs more discernment\n  else if (property === 'src') {\n    node.src = value || '';\n  } else {\n    node[property] = value;\n  }\n};\n\nconst setBoolAttribute = function(node, attr, state) {\n  node[\n    (state === undefined ? !node.hasAttribute(attr) : state)\n      ? 'setAttribute'\n      : 'removeAttribute'\n  ](attr, '');\n};\n\nconst _setSubTemplate = function(node, value, controller) {\n  // TODO(sjmiles): subtemplate iteration ability specially implemented to support xenon (serialization boundary)\n  // TODO(sjmiles): Aim to re-implement as a plugin.\n  let {template, $template: templateName, models} = value;\n  if (Array.isArray(value)) {\n    models = value;\n  }\n  if (!template) {\n    const name = templateName || node?.getAttribute('repeat');\n    template = node.getRootNode().querySelector(`template[${name}]`);\n  } else {\n    template = maybeStringToTemplate(template);\n  }\n  _renderSubtemplates(node, controller, template, models/* || $models*/);\n};\n\nconst _renderSubtemplates = function(container, controller, template, models) {\n  let child = container.firstElementChild;\n  let next;\n  if (template && models) {\n    models && models.forEach((model, i)=>{\n      next = child && child.nextElementSibling;\n      // use existing node if possible\n      if (!child) {\n        const dom = stamp(template).events(controller);\n        child = dom.root.firstElementChild;\n        if (child) {\n          child._subtreeDom = dom;\n          container.appendChild(child);\n          if (!template._shapeWarning && dom.root.firstElementChild) {\n            template._shapeWarning = true;\n            console.warn(`xen-template: subtemplate has multiple root nodes: only the first is used.`, template);\n          }\n        }\n      }\n      if (child) {\n        child._subtreeDom.set(model);\n        child = next;\n      }\n    });\n  }\n  // remove extra nodes\n  while (child) {\n    next = child.nextElementSibling;\n    child.remove();\n    child = next;\n  }\n};\n\n//window.stampCount = 0;\n//window.stampTime = 0;\n\nconst stamp = function(template, opts) {\n  //const startTime = performance.now();\n  //window.stampCount++;\n  template = maybeStringToTemplate(template);\n  // construct (or use memoized) notes\n  const notes = annotate(template, opts);\n  // CRITICAL TIMING ISSUE #1:\n  // importNode can have side-effects, like CustomElement callbacks (before we\n  // can do any work on the imported subtree, before we can mapEvents, e.g.).\n  // we could clone into an inert document (say a new template) and process the nodes\n  // before importing if necessary.\n  const root = document.importNode(template.content, true);\n  // templates don't require a single container element, but sometimes they do have one...\n  // capture the first element, because it's harder to find after we insert the nodes into DOM\n  const firstElement = root.firstElementChild;\n  // map DOM to keys\n  const map = locateNodes(root, notes.locator);\n  // return dom manager\n  const dom = {\n    root,\n    notes,\n    map,\n    firstElement,\n    $(slctr) {\n      return this.root.querySelector(slctr);\n    },\n    $$(slctr) {\n      return this.root.querySelectorAll(slctr);\n    },\n    set: function(scope) {\n      scope && set(notes, map, scope, this.controller);\n      return this;\n    },\n    events: function(controller) {\n      // TODO(sjmiles): originally `controller` was expected to be an Object with event handler\n      // methods on it (typically a custom-element stamping a template).\n      // In Xenon, we want to attach a generic handler (Function) for any event on this node.\n      // Subtemplate stamping gets involved because they need to reuse whichever controller.\n      // I suspect this can be simplified, but right now I'm just making it go.\n      if (controller && typeof controller !== 'function') {\n        controller = listen.bind(this, controller);\n      }\n      this.controller = controller;\n      if (controller) {\n        mapEvents(notes, map, controller);\n      }\n      return this;\n    },\n    // support event-forwarding when stamping descendent template DOM\n    // i.e. for objects (say, elements) that consume templates as input\n    // see also: support for `xen:forward` attribute above\n    forward: function() {\n      mapEvents(notes, map, (node, eventName, handlerName) => {\n        node.addEventListener(eventName, e => {\n          //console.log(`xen::forward: forwarding [${eventName}]`);\n          const wrapper = {eventName, handlerName, detail: e.detail, target: e.target};\n          fire(node, 'xen:forward', wrapper, {bubbles: true});\n        });\n      });\n      return this;\n    },\n    appendTo: function(node) {\n      if (this.root) {\n        // TODO(sjmiles): assumes this.root is a fragment\n        node.appendChild(this.root);\n      } else {\n        console.warn('Xen: cannot appendTo, template stamped no DOM');\n      }\n      // TODO(sjmiles): this.root is no longer a fragment\n      this.root = node;\n      return this;\n    }\n  };\n  //window.stampTime += performance.now() - startTime;\n  return dom;\n};\n\nconst fire = (node, eventName, detail, init) => {\n  const eventInit = init || {};\n  eventInit.detail = detail;\n  const event = new CustomEvent(eventName, eventInit);\n  node.dispatchEvent(event);\n  return event.detail;\n};\n\nconst maybeStringToTemplate = template => {\n  // TODO(sjmiles): need to memoize this somehow\n  return (typeof template === 'string') ? createTemplate(template) : template;\n};\n\nconst createTemplate = innerHTML => {\n  return Object.assign(document.createElement('template'), {innerHTML});\n};\n\nexport const Template = {\n  createTemplate,\n  setBoolAttribute,\n  stamp,\n  takeNote\n};\n", "/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nconst nob = () => Object.create(null);\n\nconst debounce = (key, action, delay) => {\n  if (key) {\n    clearTimeout(key);\n  }\n  if (action && delay) {\n    return setTimeout(action, delay);\n  }\n};\n\nconst XenStateMixin = Base => class extends (Base ?? class {}) {\n  constructor() {\n    super();\n    this._pendingProps = nob();\n    this._props = this._getInitialProps() || nob();\n    this._lastProps = nob();\n    this._state = this._getInitialState() || nob();\n    this._lastState = nob();\n  }\n  _getInitialProps() {\n  }\n  _getInitialState() {\n  }\n  _getProperty(name) {\n    return this._pendingProps[name] || this._props[name];\n  }\n  _setProperty(name, value) {\n    // dirty checking opportunity\n    if (this._validator || this._wouldChangeProp(name, value)) {\n      this._pendingProps[name] = value;\n      this._invalidateProps();\n    }\n  }\n  _wouldChangeValue(map, name, value) {\n    // Important dirty-checking behavior controlled here,\n    // can be overridden.\n    // The default implementation will use strict reference checking.\n    // To modify structured values one must create a new Object to\n    // replace the old one.\n    return (map[name] !== value);\n    // an example of dirty-checking that instead simply punts on structured data\n    //return (typeof value === 'object') || (map[name] !== value);\n  }\n  _wouldChangeProp(name, value) {\n    return this._wouldChangeValue(this._props, name, value);\n  }\n  _wouldChangeState(name, value) {\n    return this._wouldChangeValue(this._state, name, value);\n  }\n  _setProps(props) {\n    // TODO(sjmiles): should be a replace instead of a merge?\n    Object.assign(this._pendingProps, props);\n    this._invalidateProps();\n  }\n  _invalidateProps() {\n    this._propsInvalid = true;\n    this._invalidate();\n  }\n  mergeState(object) {\n    let dirty = false;\n    const state = this._state;\n    for (const property in object) {\n      const value = object[property];\n      if (this._wouldChangeState(property, value)) {\n        dirty = true;\n        state[property] = value;\n      }\n    }\n    if (dirty) {\n      this._invalidate();\n      return true;\n    }\n  }\n  // BC\n  _setState(object) {\n    return this.mergeState(object);\n  }\n  _async(fn) {\n    // Promise.resolve() lets the micro-queue task roll, while blocking the task-queue,\n    // so it's \"faster\" to turn-around than setTimeout\n    return Promise.resolve().then(fn.bind(this));\n  }\n  asyncTask(waitMs, fn) {\n    // setTimeout lets the task queue roll, which is important for not locking up the thread,\n    // but it's \"slower\" to turn-around than Promise.resolve\n    return setTimeout(fn, Number(waitMs) || 0);\n  }\n  _invalidate() {\n    if (!this._validator) {\n      this._validator = this._async(this._validate);\n    }\n  }\n  _getStateArgs() {\n    return [this._props, this._state, this._lastProps, this._lastState];\n  }\n  _validate() {\n    const stateArgs = this._getStateArgs();\n    // try..catch to ensure we nullify `validator` before return\n    try {\n      // TODO(sjmiles): should be a replace instead of a merge\n      Object.assign(this._props, this._pendingProps);\n      if (this._propsInvalid) {\n        // TODO(sjmiles): should/can have different timing from rendering?\n        this._willReceiveProps(...stateArgs);\n        this._propsInvalid = false;\n      }\n      if (this._shouldUpdate(...stateArgs)) {\n        // TODO(sjmiles): consider throttling update to rAF\n        this._ensureMount();\n        this._doUpdate(...stateArgs);\n      }\n    } catch (x) {\n      console.error(x);\n    }\n    // nullify validator _after_ methods so state changes don't reschedule validation\n    this._validator = null;\n    // save the old props and state\n    this._lastProps = Object.assign(nob(), this._props);\n    this._lastState = Object.assign(nob(), this._state);\n  }\n  _doUpdate(...stateArgs) {\n    this._update(...stateArgs);\n    this._didUpdate(...stateArgs);\n  }\n  _ensureMount() {\n  }\n  _willReceiveProps() {\n  }\n  _shouldUpdate() {\n    return true;\n  }\n  _update() {\n  }\n  _didUpdate() {\n  }\n  _debounce(key, func, delay) {\n    key = `_debounce_${key}`;\n    this._state[key] = debounce(this._state[key], func, delay != null ? delay : 16);\n  }\n};\n\nexport {XenStateMixin, nob, debounce};\n", "/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nexport const XenElementMixin = Base => class extends Base {\n  constructor() {\n    super();\n    this._mounted = false;\n    this._root = this;\n    this.__configureAccessors();\n    this.__lazyAcquireProps();\n  }\n  get _class() {\n    // TODO(sjmiles): problem accessing class statics under polyfills can be fixed\n    // by attaching _class reference to element constructors (not provided)\n    return (this.constructor._class || this.constructor);\n  }\n  __configureAccessors() {\n    // only do this once per prototype\n    const p = Object.getPrototypeOf(this);\n    if (!p.hasOwnProperty('__$xenPropsConfigured')) {\n      p.__$xenPropsConfigured = true;\n      const a = this._class.observedAttributes;\n      a && a.forEach(n => {\n        Object.defineProperty(p, n, {\n          get() {\n            return this._getProperty(n); // abstract\n          },\n          set(value) {\n            this._setProperty(n, value); // abstract\n          }\n        });\n      });\n    }\n  }\n  __lazyAcquireProps() {\n    const a = this._class.observedAttributes;\n    a && a.forEach(n=>{\n      if (n.toLowerCase() !== n) {\n        console.error(`Xen: Mixed-case attributes are not yet supported, \"${this.localName}.observedAttributes\" contains \"${n}\".`);\n      }\n      if (this.hasOwnProperty(n)) {\n        const value = this[n];\n        delete this[n];\n        this[n] = value;\n      } else if (this.hasAttribute(n)) {\n        this._setValueFromAttribute(n, this.getAttribute(n));\n      }\n    });\n  }\n  // provide hook for type coercion (attributes are always String valued)\n  _setValueFromAttribute(name, value) {\n    this[name] = value;\n  }\n  connectedCallback() {\n    this._mount();\n  }\n  _mount() {\n    if (!this._mounted) {\n      this._mounted = true;\n      this._doMount();\n      this._didMount();\n    }\n  }\n  _doMount() {\n  }\n  _didMount() {\n  }\n  _fire(eventName, detail, node, init) {\n    const eventInit = init || {};\n    eventInit.detail = detail;\n    const event = new CustomEvent(eventName, eventInit);\n    (node || this).dispatchEvent(event);\n    return event.detail;\n  }\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {XenStateMixin} from './xen-state.js';\nimport {XenElementMixin} from './xen-element.js';\nimport {Template} from './xen-template.js';\n\nconst {HTMLElement} = globalThis;\n\nexport const XenBaseMixin = (Base) => class extends Base {\n  get template() {\n    const module = this.constructor.module;\n    return module ? module.querySelector('template') : '';\n  }\n  get host() {\n    return this.shadowRoot || this.attachShadow({mode: `open`});\n  }\n  _doMount() {\n    this._stamp();\n    this._invalidate();\n  }\n  _stamp() {\n    if (this.template) {\n      // TODO(sjmiles): can just do `events(this)` for default listener, but we use a custom listener\n      // so we can append (props, state) to handler signature. All we are really altering is the delegation,\n      // not the listening, maybe there could be another customization point just for that. Perhaps the default\n      // listener could invoke a delegator if it exists, then fallback to original behavior.\n      this._dom = Template.stamp(this.template).events(this._listener.bind(this)).appendTo(this.host);\n    }\n  }\n  _listener(node, name, handler) {\n    node.addEventListener(name, e => {\n      if (this[handler]) {\n        return this[handler](e, e.detail, this._props, this._state);\n      }\n    });\n  }\n  _doUpdate(...stateArgs) {\n    this._update(...stateArgs);\n    let model = this._render(...stateArgs);\n    if (this._dom) {\n      if (Array.isArray(model)) {\n        model = model.reduce((sum, value) => Object.assign(sum, value), Object.create(null));\n      }\n      this._dom.set(model);\n    }\n    this._didUpdate(...stateArgs);\n    this._didRender(...stateArgs);\n  }\n  _render() {\n  }\n  _didRender() {\n  }\n};\n\nexport const XenBase = XenBaseMixin(XenElementMixin(XenStateMixin(HTMLElement)));\n", "/**\n * @license\n * Copyright 2019 Google LLC.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nexport const Debug = (Base, log) => class extends Base {\n  _setProperty(name, value) {\n    if (Debug.level > 1) {\n      if (((name in this._pendingProps) && (this._pendingProps[name] !== value)) || (this._props[name] !== value)) {\n        log('props', deepishClone({[name]: value}));\n      }\n    }\n    return super._setProperty(name, value);\n  }\n  _setState(state) {\n    if (typeof state !== 'object') {\n      console.warn(`Xen::_setState argument must be an object`);\n      return false;\n    }\n    if (super._setState(state)) {\n      if (Debug.level > 1) {\n        if (Debug.lastFire) {\n          //Debug.lastFire.log('[next state change from] fire', {[Debug.lastFire.name]: Debug.lastFire.detail});\n          //Debug.lastFire.log('fire', Debug.lastFire.name, Debug.lastFire.detail);\n          log('(fired -->) state', deepishClone(state));\n        } else {\n          log('state', deepishClone(state));\n        }\n      }\n      return true;\n    }\n  }\n  _setImmutableState(name, value) {\n    log('state [immutable]', {[name]: value});\n    super._setImmutableState(name, value);\n  }\n  _fire(name, detail, node, init) {\n    Debug.lastFire = {name, detail: deepishClone(detail), log};\n    log('fire', {[Debug.lastFire.name]: Debug.lastFire.detail});\n    super._fire(name, detail, node, init);\n    Debug.lastFire = null;\n  }\n  _doUpdate(...args) {\n    if (Debug.level > 2) {\n      log('updating...');\n    }\n    return super._doUpdate(...args);\n  }\n  _invalidate() {\n    if (Debug.level > 2) {\n      if (!this._validator) {\n        log('invalidating...');\n      }\n    }\n    super._invalidate();\n  }\n};\n\n// TODO(sjmiles): cloning prevents console log from showing values from the future,\n// but this must be a deep clone. Circular objects are not cloned.\nconst deepishClone = (obj, depth) => {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  const clone = Object.create(null);\n  for (const n in obj) {\n    let value = obj[n];\n    //try {\n    //  value = JSON.parse(JSON.stringify(value));\n    //} catch (x) {\n      if (depth < 1) {\n        value = deepishClone(obj, (depth || 0) + 1);\n      }\n    //}\n    clone[n] = value;\n  }\n  return clone;\n};\n\nDebug.level = 0;\n\nconst _logFactory = (preamble, color, log='log') => console[log].bind(console, `%c${preamble}`, `background: ${color}; color: white; padding: 1px 6px 2px 7px; border-radius: 6px;`);\nexport const logFactory = (preamble, color, log) => (Debug.level > 0) ? _logFactory(preamble, color, log) : () => {};\n\nexport const walker = (node, tree) => {\n  let subtree = tree;\n  if (!subtree) {\n    subtree = {};\n  }\n  const root = node || document.body;\n  let index = 1;\n  let child = root.firstElementChild;\n  while (child) {\n    const name = child.localName;\n    const clas = customElements.get(name);\n    if (clas) {\n      const shadow = child.shadowRoot;\n      const record = {\n        node: child,\n        props: child._props,\n        state: child._state\n      };\n      const children = shadow ? walker(shadow) : {};\n      if (children) {\n        record.children = children;\n      }\n      let moniker = `${name}${child.id ? `#${child.id}` : ``} (${index++})`;\n      while (subtree[moniker]) {\n        moniker += '_';\n      }\n      subtree[moniker] = record;\n    }\n    walker(child, subtree);\n    child = child.nextElementSibling;\n  }\n  return subtree;\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {Template} from './xen-template.js';\nimport {XenStateMixin, debounce, nob} from './xen-state.js';\nimport {XenElementMixin} from './xen-element.js';\nimport {XenBaseMixin, XenBase} from './xen-base.js';\nimport {Debug, logFactory, walker} from './xen-debug.js';\n\n// helper for editors that can syntax highlight html template strings\nconst html = (strings, ...values) => {\n  return (strings[0] + values.map((v, i) => v + strings[i + 1]).join('')).trim();\n};\n\nTemplate.html = (...args) => Template.createTemplate(html(...args));\n\nconst clone = obj => typeof obj === 'object' ? Object.assign(Object.create(null), obj) : {};\n\n// TODO(sjmiles): properties of Xen include some classes as mixins, some as resolved, we should\n// be more explicit\n\nconst Xen = {\n  State: XenStateMixin,\n  Template,\n  Element: XenElementMixin,\n  BaseMixin: XenBaseMixin,\n  Base: XenBase,\n  Debug,\n  setBoolAttribute: Template.setBoolAttribute,\n  html,\n  walker,\n  logFactory,\n  clone,\n  nob,\n  debounce\n};\n\nglobalThis.Xen = Xen;\nexport default Xen;\n", "/**\n * @license\n * Copyright 2019 Google LLC.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport Xen from './xen.js';\n\nconst XenAsyncMixin = Base => class extends Base {\n  // shorthand for adding state,\n  // `this.state = state` is equivalent to `this._setState(state)`\n  set state(state) {\n    this._setState(state);\n  }\n  get state() {\n    return this._state;\n  }\n  get props() {\n    return this._props;\n  }\n  async(fn) {\n    return this._async(fn);\n  }\n  invalidate(fn) {\n    return this._invalidate(fn);\n  }\n  // store result `await operation()` into state[name],\n  // making sure to only invoke `operation` once even if\n  // `awaitState` is called multiple times\n  async awaitState(name, operation) {\n    const state = this._state;\n    const semaphore = `_await_${name}`;\n    //console.warn('awaitState', name, state[semaphore]);\n    if (!state[semaphore]) {\n      state[semaphore] = true;\n      const value = await operation();\n      this.state = {[name]: value, [semaphore]: false};\n    }\n  }\n  // underscore relief\n  fire(...args) {\n    return this._fire(...args);\n  }\n  _getInitialState() {\n    return this.getInitialState && this.getInitialState();\n  }\n  _update(props, state, oldProps, oldState) {\n    return this.update && this.update(props, state, oldProps, oldState);\n  }\n  _render(props, state, oldProps, oldState) {\n    if (this.shouldRender(props, state, oldProps, oldState)) {\n      return this.render && this.render(props, state, oldProps, oldState);\n    }\n  }\n  shouldRender() {\n    return true;\n  }\n  render(props, state) {\n    return state;\n  }\n  // event->state utility\n  onState(e, data) {\n    this._setState({[e.type]: data});\n  }\n};\n\nXen.AsyncMixin = XenAsyncMixin;\nXen.Async = XenAsyncMixin(Xen.Base);\n\nexport {Xen, XenAsyncMixin};\n"],
  "mappings": "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",
  "names": ["Annotator", "cb", "node", "notes", "opts", "childLocators", "child", "previous", "neo", "childLocator", "key", "shouldLocate", "locators", "cl", "locateNodes", "root", "locator", "map", "n", "loc", "annotatorImpl", "tracking", "annotateElementNode", "annotateTextNode", "annotateMustache", "noted", "a$", "i", "annotateEvent", "annotateDirective", "property", "mustache", "value", "delim", "override", "takeNote", "name", "group", "note", "n$", "annotator", "annotate", "mapEvents", "mapper", "events", "event", "listen", "controller", "eventName", "handlerName", "e", "set", "scope", "mustaches", "_set", "modifier", "setBoolAttribute", "_setSubTemplate", "isPrimitiveValue", "attr", "state", "template", "templateName", "models", "maybeStringToTemplate", "_renderSubtemplates", "container", "next", "model", "dom", "stamp", "firstElement", "slctr", "wrapper", "fire", "detail", "init", "eventInit", "createTemplate", "innerHTML", "Template", "nob", "debounce", "key", "action", "delay", "XenStateMixin", "Base", "name", "value", "map", "props", "object", "dirty", "state", "property", "fn", "waitMs", "stateArgs", "x", "func", "XenElementMixin", "Base", "p", "a", "n", "value", "name", "eventName", "detail", "node", "init", "eventInit", "event", "HTMLElement", "XenBaseMixin", "Base", "module", "Template", "node", "name", "handler", "e", "stateArgs", "model", "sum", "value", "XenBase", "XenElementMixin", "XenStateMixin", "Debug", "Base", "log", "name", "value", "deepishClone", "state", "detail", "node", "init", "args", "obj", "depth", "clone", "n", "_logFactory", "preamble", "color", "logFactory", "walker", "tree", "subtree", "root", "index", "child", "shadow", "record", "children", "moniker", "html", "strings", "values", "v", "Template", "args", "clone", "obj", "Xen", "XenStateMixin", "XenElementMixin", "XenBaseMixin", "XenBase", "Debug", "walker", "logFactory", "nob", "debounce", "xen_default", "XenAsyncMixin", "Base", "state", "fn", "name", "operation", "semaphore", "value", "args", "props", "oldProps", "oldState", "data", "xen_default"]
}
