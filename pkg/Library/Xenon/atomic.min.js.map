{
  "version": 3,
  "sources": ["Utils/logf.js", "Utils/rand.js", "Utils/id.js", "Utils/object.js", "Utils/safe-object.js", "Utils/paths.js", "Atomic/Atom.js", "Atomic/EventEmitter.js", "Atomic/Decorator.js", "Atomic/Host.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n// log methods we support\nexport const logKinds = ['log', 'warn', 'error', 'group', 'groupCollapsed', 'groupEnd'];\nexport const importantKinds = ['warn', 'error'];\n\n// pretty!\nconst formatter = (preamble, bg, color) => {\n  const style = `background: ${bg || 'gray'}; color: ${color || 'white'}; padding: 1px 6px 2px 7px; border-radius: 6px 0 0 6px;`;\n  return [`%c${preamble}`, style];\n};\n\n// log storage for the universe\nconst logs = [];\n\n// log industry\nexport const createLogFactory = () => {\n  // immediate logs only use console if flagged\n  const flags = globalThis.config?.logFlags || {};\n  // the logfactory instance we will return\n  const logf = (preamble, bg, color) => {\n    const format = formatter(preamble, bg, color);\n    // make a function which can create an immediate log entry\n    const make = \n      kind => (...args) => {\n        const when = Date.now();\n        const vicinity = Error().stack.split('\\n').slice(1);\n        //const info = [JSON.stringify(vicinity, null, '  ')];\n        let spot = vicinity.shift();\n        while (spot.includes('xen-async') || spot.includes('xenon-atomic') || spot.includes('logf')) {\n          spot = vicinity.shift();\n        }\n        const where = spot?.split?.('/').pop().split?.(')').shift();\n        //console.log(...info, where, preamble, args);\n        append(preamble, format, kind, when, where, args, logs);\n        consolate(flags, preamble, format, kind, when, where, args);\n      };\n    // create the logger as a function \n    const log = make('log');\n    // stuff log variants on as properties\n    logKinds.forEach(k => log[k] = make(k));\n    // make flags available\n    log.flags = flags;\n    log.get = logf.get;\n    log.clear = logf.clear;\n    log.replay = logf.replay;\n    return log; \n  };\n  // append an entry to a log and/or output to a console\n  const append = (preamble, format, kind, when, where, args) => {\n    const o = Object.create(null);\n    Object.assign(o, {preamble, format, kind, where, when});\n    if (args?.length) {\n      o.args = args;\n    }\n    //logs.push(o);\n  };\n  const consolate = (flags, preamble, format, kind, when, where, args) => {\n    const flag = preamble.split(':').shift();\n    if (!flags || flags?.[flag] || importantKinds.includes(kind)) {\n      console[kind].apply(console, [...format, ...(args || []), `\\t[${where}]`]);\n    }\n  };\n  logf.flags = flags;\n  logf.get = () => logs;\n  logf.clear = () => logs.splice(0, -1);\n  logf.replay = (customFlags, filter) => {\n    //console.group('Replay');\n    console.group.apply(console, [...formatter('Logger', 'white', 'gray'), 'Replay']);\n    logs.filter(filter ?? (i=>i)).forEach(({preamble, format, kind, when, where, args}) => {\n      consolate(customFlags, preamble, format, kind, when, where, args);\n    });\n    console.groupEnd();\n  };\n  return logf;\n};\n\nif (globalThis.logf) {\n  console.warn('attempted global logf overwrite');\n} else {\n  // create a default factory\n  globalThis.logf = createLogFactory();\n}\n\nexport const logf = globalThis.logf;\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst { floor, pow, random } = Math;\n// random n-digit number\nexport const key = (digits) => floor((1 + random() * 9) * pow(10, digits - 1));\n// random integer from [0..range)\nexport const irand = (range) => floor(random() * range);\n// random element from array\nexport const arand = (array) => array[irand(array.length)];\n// test if event has occured, where `probability` is between [0..1]\nexport const prob = (probability) => Boolean(random() < probability);\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {irand} from \"./rand.js\";\n\nexport const makeId = (pairs, digits, delim) => {\n  pairs = pairs || 2;\n  digits = digits || 2;\n  delim = delim || '-';\n  const min = Math.pow(10, digits - 1);\n  const range = Math.pow(10, digits) - min;\n  const result = [];\n  for (let i = 0; i < pairs; i++) {\n      result.push(`${irand(range - min) + min}`);\n  }\n  return result.join(delim);\n};\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n* update the fields of `obj` with the fields of `data`,\n* perturbing `obj` as little as possible (since it might be a magic proxy thing\n* like an Automerge document)\n*/\nexport const shallowUpdate = (obj, data) => {\n  let result = data;\n  if (!data) {\n    //\n  }\n  else if (Array.isArray(data)) {\n    if (!Array.isArray(obj)) {\n      // TODO(sjmiles): eek, very perturbing to obj\n      obj = [];\n    }\n    for (let i = 0; i < data.length; i++) {\n      const value = data[i];\n      if (obj[i] !== value) {\n        obj[i] = value;\n      }\n    }\n    const overage = obj.length - data.length;\n    if (overage > 0) {\n      obj.splice(data.length, overage);\n    }\n  }\n  else if (typeof data === 'object') {\n    result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n    const seen = {};\n    // for each key in input data ...\n    Object.keys(data).forEach(key => {\n      // copy that data into output\n      result[key] = data[key];\n      // remember the key\n      seen[key] = true;\n    });\n    // for each key in the output data...\n    Object.keys(result).forEach(key => {\n      // if this key was not in the input, remove it\n      if (!seen[key]) {\n        delete result[key];\n      }\n    });\n  }\n  return result;\n};\n\nexport const shallowMerge = (obj, data) => {\n  if (data == null) {\n    return null;\n  }\n  if (typeof data === 'object') {\n    const result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n    Object.keys(data).forEach(key => result[key] = data[key]);\n    return result;\n  }\n  return data;\n};\n\nexport const deepMerge = (obj, data) => {\n  if (data !== null) {\n    if (typeof data === 'object' && !Array.isArray(data)) {\n      const result = (obj && typeof obj === 'object') ? obj : Object.create(null);\n      Object.keys(data).forEach(key => result[key] = deepMerge(result[key], data[key]));\n      return result;\n    }\n    return data\n  }\n  return obj;\n};\n\nexport function deepCopy(datum) {\n  if (!datum) {\n    return datum;\n  }\n  else if (Array.isArray(datum)) {\n    // This is trivially type safe but tsc needs help\n    return datum.map(element => deepCopy(element));\n  }\n  else if (typeof datum === 'object') {\n    const clone = Object.create(null);\n    Object.entries(datum).forEach(([key, value]) => {\n      clone[key] = deepCopy(value);\n    });\n    return clone;\n  }\n  else {\n    return datum;\n  }\n}\n\nexport const deepEqual = (a, b) => {\n  const type = typeof a;\n  // must be same type to be equal\n  if (type !== typeof b) {\n    return false;\n  }\n  // we are `deep` because we recursively study object types\n  if (type === 'object' && a && b) {\n    const aProps = Object.getOwnPropertyNames(a);\n    const bProps = Object.getOwnPropertyNames(b);\n    // equal if same # of props, and no prop is not deepEqual\n    return (aProps.length == bProps.length) && !aProps.some(name => !deepEqual(a[name], b[name]));\n  }\n  // finally, perform simple comparison\n  return (a === b);\n};\n\nexport const deepUndefinedToNull = (obj) => {\n  if (obj === undefined) {\n    return null;\n  }\n  if (obj && (typeof obj === 'object')) {\n    // we are `deep` because we recursively study object types\n    const props = Object.getOwnPropertyNames(obj);\n    props.forEach(name => {\n      const prop = obj[name];\n      if (prop === undefined) {\n        delete obj[name];\n        //obj[name] = null;\n      }\n      else {\n        deepUndefinedToNull(prop);\n      }\n    });\n  }\n  return obj;\n};\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst O = Object;\n\nexport const SafeObject = {\n  create: O.create,\n  assign: O.assign,\n  nob() {\n    return O.create(null)\n  },\n  keys(o) {\n    return o ? O.keys(o) : [];\n  },\n  values(o) {\n    return o ? O.values(o) : [];\n  },\n  entries(o) {\n    return o ? O.entries(o) : [];\n  },\n  mapBy(a, keyGetter) {\n    return SafeObject.values(a).reduce((map, item) => (map[keyGetter(item)] = item, map), SafeObject.nob())\n  },\n  map(o, visitor) {\n    return SafeObject.entries(o).map(([key, value]) => visitor(key, value));\n  }\n};\n\nexport const {create, assign, keys, values, entries, nob, map, mapBy} = SafeObject;\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nexport const PathMapper = class {\n  map;\n  constructor(root) {\n    this.map = {};\n    this.setRoot(root);\n  }\n  add(mappings) {\n    Object.assign(this.map, mappings || {});\n  }\n  resolve(path) {\n    let last;\n    do {\n      path = this._resolve(last = path);\n    } while (last !== path);\n    return path;\n  }\n  _resolve(path) {\n    const bits = path.split('/');\n    const top = bits.shift();\n    const prefix = this.map[top] || top;\n    return [prefix, ...bits].join('/');\n  }\n  setRoot(root) {\n    if (root.length && root[root.length - 1] === '/') {\n      root = root.slice(0, -1);\n    }\n    this.add({\n      '$root': root,\n      '$xenon': root\n    });\n  }\n  getAbsoluteHereUrl(meta, depth) {\n    // you are here\n    const localRelative = meta.url.split('/').slice(0, -(depth ?? 1)).join('/');\n    if (!globalThis?.document) {\n      return localRelative;\n    }\n    else {\n      // document root is here\n      let base = document.URL;\n      // if document URL has a filename, remove it\n      if (base[base.length - 1] !== '/') {\n          base = `${base.split('/').slice(0, -1).join('/')}/`;\n      }\n      // create absoute path to here (aka 'local')\n      let localAbsolute = new URL(localRelative, base).href;\n      // no trailing slash!\n      if (localAbsolute[localAbsolute.length - 1] === '/') {\n          localAbsolute = localAbsolute.slice(0, -1);\n      }\n      return localAbsolute;\n    }\n  }\n};\n\nconst root = ''; //import.meta?.url?.split('/').slice(0, -3).join('/');\nexport const Paths = globalThis['Paths'] = new PathMapper(root ?? '');\nPaths.add(globalThis.config?.paths);\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n PSA: code in this file is subject to isolation restrictions, including runtime processing.\n Atom module interfaces with 3p code, and is often loaded into isolation contexts.\n*/\n\nconst O = Object;\nconst {defineProperty, setPrototypeOf} = O;\nconst {create, assign, keys, values, entries, mapBy} = {\n  create: O.create,\n  assign: O.assign,\n  keys(o) {\n    return o ? O.keys(o) : [];\n  },\n  values(o) {\n    return o ? O.values(o) : [];\n  },\n  entries(o) {\n    return o ? O.entries(o) : [];\n  },\n  mapBy(a, keyGetter) {\n    return a ? O.values(a).reduce((map, item) => (map[keyGetter(item)] = item, map), {}) : {};\n  }\n};\n\nconst scope = globalThis['scope'] ?? globalThis;\n\nconst nob = () => create(null);\n\nconst privateProperty = initialValue => {\n  let value = initialValue;\n  return { get: () => value, set: v => value = v };\n};\n\n/** */\nexport class Atom {\n  pipe;\n  impl;\n  internal;\n  /** */\n  constructor(proto, pipe, beStateful) {\n    this.pipe = pipe;\n    this.impl = create(proto);\n    globalThis.harden?.(this.impl);\n    defineProperty(this, 'internal', privateProperty(nob()));\n    this.internal.$busy = 0;\n    //if (beStateful) {\n    this.internal.beStateful = true;\n    this.internal.state = nob();\n    this.internal.clean = nob();\n    //}\n  }\n  /** */\n  get log() {\n    return this.pipe?.log || log;\n  }\n  /** */\n  get template() {\n    return this.impl?.template;\n  }\n  /** */\n  get config() {\n    return {\n        template: this.template\n    };\n  }\n  /**\n   * set-trap for inputs, so we can do work when inputs change\n   */\n  set inputs(inputs) {\n    //this.log(inputs);\n    this.internal.inputs = inputs;\n    this.invalidateInputs();\n  }\n  get inputs() {\n    return this.internal.inputs;\n  }\n  /** */\n  get state() {\n    return this.internal.state;\n  }\n  /** */\n  isDirty(inputKey) {\n    const clean = this.internal.clean;\n    const value = this.internal.inputs[inputKey];\n    if (deepEqual(value, clean[inputKey])) {\n      //console.warn(i, key, value, 'THIS HOUSE IS CLEAN');\n      return false;\n    }\n    clean[inputKey] = value;\n    //console.warn(i, key, value, 'was dirty');\n    return true;\n  }\n  /** */\n  async service(request, msg, data) {\n    if (typeof request === 'string') {\n      request = {kind: request, msg, data};\n    }\n    return this.pipe?.service?.(request);\n  }\n  /** */\n  invalidateInputs() {\n    this.internal.$propChanged = true;\n    this.invalidate();\n  }\n  /** \n   validate after the next microtask\n  */\n  invalidate() {\n    if (!this.internal.validator) {\n      //this.internal.validator = this.async(this.validate);\n      this.internal.validator = timeout(this.validate.bind(this), 1);\n    }\n  }\n  /** \n   call fn after a microtask boundary\n  */\n  // async(fn) {\n  //   return Promise.resolve().then(fn.bind(this));\n  // }\n  /** \n   activate atom update sequence\n  */\n  async validate() {\n    //this.log('validate');\n    if (this.internal.validator) {\n      // try..finally to ensure we nullify `validator`\n      try {\n        this.internal.$validateAfterBusy = this.internal.$busy;\n        if (!this.internal.$busy) {\n          // if we're not stateful\n          if (!this.internal.beStateful) {\n            // then it's a fresh state every validation\n            this.internal.state = nob();\n          }\n          // inputs are immutable (changes to them are ignored)\n          this.internal.inputs = this.validateInputs();\n          // let the impl decide what to do\n          await this.maybeUpdate();\n        }\n      }\n      catch (e) {\n        log.error(e);\n      }\n      // nullify validator _after_ methods so state changes don't reschedule validation\n      this.internal.validator = null;\n      this.internal.$propChanged = false;\n    }\n  }\n  /** */\n  validateInputs() {\n    return assign(nob(), this.inputs);\n  }\n  /** */\n  implements(methodName) {\n    return typeof this.impl?.[methodName] === 'function';\n  }\n  /** */\n  async maybeUpdate() {\n    if (!this.checkInit()) {\n      await this.doInit();\n    }\n    let doUpdate = false;\n    if (this.implements('update')) {\n      doUpdate = \n        !this.implements('shouldUpdate')\n        || await (this.shouldUpdate(this.inputs, this.state))\n        ;\n    }\n    if (doUpdate) {\n      return this.update();\n    }\n    else {\n      // we might want to render even if we don't update\n      this.outputData(null);\n    }\n  }\n  /** */\n  checkInit() {\n    return this.internal.initialized;\n  }\n  /** */\n  async doInit() {\n    this.internal.initialized = true;\n    if (this.implements('initialize')) {\n      await this.asyncMethod(this.impl.initialize);\n    }\n  }\n  /** */\n  async shouldUpdate(inputs, state) {\n    // for this method, \"not implemented\" is true, if implemented, \"true\" is true\n    return !this.implements('shouldUpdate') || await this.impl.shouldUpdate(inputs, state);\n  }\n  /** */\n  update() {\n    this.asyncMethod(this.impl?.update);\n  }\n  /** */\n  outputData(data) {\n    this.pipe?.output?.(data, this.maybeRender());\n  }\n  /** */\n  maybeRender() {\n    if (this.template) {\n      const { inputs, state } = this.internal;\n      if (!this.implements('shouldRender') || this.impl?.shouldRender?.(inputs, state)) {\n        if (this.implements('render')) {\n          return this.impl.render(inputs, state);\n        }\n        else {\n          return { ...inputs, ...state };\n        }\n      }\n    }\n  }\n  /** */\n  async handleEvent({ handler, data }) {\n    const onhandler = this.impl?.[handler];\n    if (onhandler) {\n      this.internal.inputs.eventlet = data;\n      await this.asyncMethod(onhandler.bind(this.impl), { eventlet: data });\n      this.internal.inputs.eventlet = null;\n    }\n    else {\n      //this.log(`event handler [${handler}] not found`);\n    }\n  }\n  /** */\n  async asyncMethod(asyncMethod, injections) {\n    if (asyncMethod) {\n      const { inputs, state } = this.internal;\n      const stdlib = {\n        service: async (...args) => this.service(...args),\n        invalidate: () => this.invalidate(),\n        output: async (data) => this.outputData(data),\n        isDirty: inputName => this.isDirty(inputName)\n      };\n      const task = asyncMethod.bind(this.impl, inputs, state, { ...stdlib, ...injections });\n      this.outputData(await this.try(task));\n      if (!this.internal.$busy && this.internal.$validateAfterBusy) {\n        this.invalidate();\n      }\n    }\n  }\n  /** */\n  async try(asyncFunc) {\n    this.internal.$busy++;\n    try {\n        return await asyncFunc();\n    }\n    catch (e) {\n        log.error(e);\n    }\n    finally {\n        this.internal.$busy--;\n    }\n  }\n}\n\nscope.harden?.(globalThis);\nscope.harden?.(Atom);\n\n// log('Any leaked values? Must pass three tests:');\n// try { globalThis['sneaky'] = 42; } catch(x) { log('sneaky test: pass'); }\n// try { Atom['foo'] = 42; } catch(x) { log('Atom.foo test: pass'); }\n// try { log['foo'] = 42; } catch(x) { log('log.foo test: pass'); };\n\nAtom;\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nexport class EventEmitter {\n    // map of event name to listener array\n    listeners = {};\n    getEventListeners(eventName) {\n        return this.listeners[eventName] || (this.listeners[eventName] = []);\n    }\n    fire(eventName, ...args) {\n        const listeners = this.getEventListeners(eventName);\n        if (listeners?.forEach) {\n            listeners.forEach(listener => listener(...args));\n        }\n    }\n    listen(eventName, listener, listenerName) {\n        if (!listener) {\n            console.warn('Got a null listener', eventName);\n            return;\n        }\n        const listeners = this.getEventListeners(eventName);\n        listeners.push(listener);\n        listener._name = listenerName || '(unnamed listener)';\n        return listener;\n    }\n    unlisten(eventName, listener) {\n        const list = this.getEventListeners(eventName);\n        const index = (typeof listener === 'string') ? list.findIndex(l => l._name === listener) : list.indexOf(listener);\n        if (index >= 0) {\n            list.splice(index, 1);\n        }\n        else {\n            console.warn('failed to unlisten from', eventName);\n        }\n    }\n}\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n * @module Decorator\n */\nimport {deepCopy} from '../Utils/object.js';\n\nconst {values, entries} = Object;\nconst opaqueData = {};\nconst log = logf('Decorator', 'plum');\n\n/** */\nexport const Decorator = {\n  /** */\n  setOpaqueData(name, data) {\n    opaqueData[name] = data; //deepCopy(data);\n    return name;\n  },\n  /** */\n  getOpaqueData(name) {\n    return opaqueData[name];\n  },\n  /** */\n  maybeDecorateModel(model, atom) {\n    if (model && !Array.isArray(model)) {\n      // for each item in model, regardless of key\n      values(model).forEach((item) => {\n        // is an object?\n        if (item && (typeof item === 'object')) {\n          // are there sub-models\n          if (item['models']) {\n            // the decorate this item\n            log('applying decorator(s) to list:', item);\n            this.maybeDecorateItem(item, atom);\n          }\n          else {\n            // otherwise, check if there are sub-items to decorate\n            if (model?.filter || model?.decorator || model?.collateBy) {\n              log('scanning for lists in sub-model:', item);\n              this.maybeDecorateModel(item, atom);\n            }\n          }\n        }\n      });\n    }\n    // possibly decorated model\n    return model;\n  },\n  /** */\n  maybeDecorateItem(item, atom) {\n    let models = (typeof item.models === 'string') ? this.getOpaqueData(item.models) : item.models;\n    if (models) {\n      // do a decorator\n      models = maybeDecorate(models, item.decorator, atom);\n      // do a filter\n      models = maybeFilter(models, item.filter, atom.impl);\n      // do a collator\n      models = maybeCollateBy(models, item);\n      // mutate items\n      item.models = models;\n      //console.log(JSON.stringify(models, null, '  '));\n    }\n  }\n};\n\n/** */\nconst maybeDecorate = (models, decorator, atom) => {\n  decorator = atom.impl[decorator] ?? decorator;\n  const { inputs, state } = atom.internal;\n  if (decorator) {\n    // TODO(cromwellian): Could be expensive to do everything, store responsibility?\n    const immutableInputs = Object.freeze(deepCopy(inputs));\n    // we don't want the decorator to have access to mutable globals\n    const immutableState = Object.freeze(deepCopy(state));\n    // models become decorous\n    models = models.map(model => {\n      // use previously mutated data or initialize\n      // TODO(cromwellian): I'd like to do Object.freeze() here, also somehow not mutate the models inplace\n      // Possibly have setOpaqueData wrap the data so the privateData lives on the wrapper + internal immutable data\n      model.privateData = model.privateData || {};\n      // TODO(cromwellian): also could be done once during setOpaqueData() if we can track privateData differently\n      const immutableModel = Object.freeze(deepCopy(model));\n      const decorated = decorator(immutableModel, immutableInputs, immutableState);\n      // set new privateData from returned\n      model.privateData = decorated.privateData;\n      return { ...decorated, ...model, };\n    });\n    // sort (possible that all values undefined)\n    models.sort(sortByLc('sortKey'));\n    log('decoration was performed');\n  }\n  //models.forEach(model => delete model.privateData);\n  return models;\n};\n\n/** */\nconst maybeFilter = (models, filter, impl) => {\n  filter = impl[filter] ?? filter;\n  if (filter && models) {\n    // models become filtrated\n    models = models.filter(filter);\n  }\n  return models;\n};\n\n/** */\nconst maybeCollateBy = (models, item) => {\n  // construct requested sub-lists\n  entries(item).forEach(([name, collator]) => {\n    // generate named collations for items of the form `[name]: {collateBy}`\n    if (collator?.['collateBy']) {\n      // group the models into buckets based on the model-field named by `collateBy`\n      const collation = collate(models, collator['collateBy']);\n      models = collationToRenderModels(collation, name, collator['$template']);\n    }\n  });\n  return models;\n};\n\nconst sort = (a, b) => a < b ? -1 : a > b ? 1 : 0;\nconst sortByLc = key => (a, b) => sort(String(a[key]).toLowerCase(), String(b[key]).toLowerCase());\n\n/** */\nconst collate = (models, collateBy) => {\n  const collation = {};\n  models.forEach(model => {\n    const keyValue = model[collateBy];\n    if (keyValue) {\n      const category = collation[keyValue] || (collation[keyValue] = []);\n      category.push(model);\n    }\n  });\n  return collation;\n};\n\n/** */\nconst collationToRenderModels = (collation, name, $template) => {\n  return entries(collation).map(([key, models]) => ({\n    key,\n    [name]: { models, $template },\n    single: !(models['length'] !== 1),\n    ...models?.[0]\n  }));\n};\n", "/**\n * @license\n * Copyright 2023 PurpleIonPower LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {arand} from '../Utils/rand.js';\nimport {deepEqual, deepCopy} from '../Utils/object.js';\nimport {EventEmitter} from './EventEmitter.js';\nimport {Decorator} from './Decorator.js';\n\nconst {entries, keys} = Object;\n\nconst customLogFactory = id => logf(`Host (${id})`, arand(logColors));\nconst logColors = ['#5a189a', '#51168b', '#48137b', '#6b2fa4', '#7b46ae', '#3f116c'];\n//const customLogFactory = (id) => logFactory(logFactory.flags.host, `Host (${id})`, arand(['#5a189a', '#51168b', '#48137b', '#6b2fa4', '#7b46ae', '#3f116c']));\n\n/* TODO(sjmiles):\nUpdate Cycle Documented Briefly\n1. when a Store changes it invokes it's listeners\n2. when an App hears a Store change, it updates Hosts bound to the Store\n3. App updates Host by creating an `inputs` object from Stores and metadata\n   - ignores fact inputs are accumulated\n   - ignores information about which Store has updated\n4. `inputs` object is assigned to `hosts.inputs` \n5. Host does an expensive `deepEqual` equality check. Turning on `host` logging should reveal `this.log('inputs are not interesting, skipping update');` if data is caught in this trap\n   - we can use reference testing here if we are more careful\n     about using immutable data\n6. the atom.inputs are assigned (but is really a *merge*)\n*/\n\n/**\n * Host owns metadata (e.g. `id`, `container`) that its Atom is not allowed to access.\n * Host knows how to talk to its Atom (asynchronously, potentially using a bus).\n */\nexport class Host extends EventEmitter {\n  /** */\n  id;\n  /** */\n  lastOutput;\n  /** */\n  lastPacket;\n  /** */\n  lastRenderModel;\n  /** */\n  log;\n  /** */\n  meta;\n  /** */\n  atom;\n  /** */\n  constructor(id) {\n    super();\n    this.log = customLogFactory(id);\n    this.id = id;\n    this.name = id;\n  }\n  /** */\n  dispose() {\n    this.detach();\n  }\n  /** */\n  onevent(eventlet) {\n    this.fire('eventlet', eventlet);\n  }\n  /** */\n  // Atom and AtomMeta are separate, host specifically integrates these on behalf of Atom\n  installAtom(atom, meta) {\n    if (this.atom) {\n      this.detachAtom();\n    }\n    if (atom) {\n      this.atom = atom;\n      this.meta = meta || this.meta;\n    }\n  }\n  /** */\n  get container() {\n    return this.meta?.container || 'root';\n  }\n  /** */\n  detach() {\n    this.detachAtom();\n  }\n  /** */\n  detachAtom() {\n    if (this.atom) {\n      this.render({ $clear: true });\n      this.atom = null;\n      this.meta = null;\n    }\n  }\n  /** */\n  async service(request) {\n    if (request?.decorate) {\n      return Decorator.maybeDecorateModel(request.model, this.atom);\n    }\n    if (request) {\n      const promise = new Promise(resolve => \n        request.resolve = value => {\n          delete request.resolve;\n          resolve(value);\n        }\n      );\n      this.fire('service', request);\n      return promise;\n    }\n  }\n  /** */\n  output(outputModel, renderModel) {\n    if (outputModel) {\n      this.lastOutput = outputModel;\n      this.fire('output', outputModel);\n    }\n    if (this.template) {\n      Decorator.maybeDecorateModel(renderModel, this.atom);\n      this.lastRenderModel = { ...renderModel };\n      // 'render' event is sent from 'render()'\n      this.render(renderModel);\n    }\n  }\n  /** */\n  render(model) {\n    const { id, container, template } = this;\n    const content = { model, template };\n    const packet = { id, container, content };\n    this.fire('render', packet);\n    this.lastPacket = packet;\n  }\n  /** */\n  rerender() {\n    // does not re-render Frame/Slot content\n    if (this.lastRenderModel) {\n      this.render(this.lastRenderModel);\n    }\n  }\n  /**/\n  set inputs(inputs) {\n    if (this.atom && inputs) {\n      let lastInputs = this.atom.internal.inputs ?? this.meta?.staticInputs ?? Object.create(null);\n      this.atom.inputs = deepCopy({...lastInputs, ...inputs});\n      this.fire('inputs-changed');\n    }\n  }\n  /**/\n  dirtyCheck(inputs, lastInputs, lastOutput) {\n    const dirtyBits = ([n, v]) => (lastOutput?.[n] && !deepEqual(lastOutput[n], v))\n      || !deepEqual(lastInputs?.[n], v)\n      ;\n    return !lastInputs\n      || entries(inputs).length !== this.lastInputsLength(lastInputs)\n      || entries(inputs).some(dirtyBits)\n      ;\n  }\n  /**/\n  lastInputsLength(lastInputs) {\n    return keys(lastInputs).filter(key => !this.meta?.staticInputs?.[key] && key !== 'eventlet').length;\n  }\n  /**/\n  get config() {\n    return this.atom?.config;\n  }\n  /**/\n  get template() {\n    return this.config?.template;\n  }\n  /**/\n  hasTemplate() {\n    return Boolean(this.template);\n  }\n  /**/\n  invalidate() {\n    this.atom?.invalidate();\n  }\n  /**/\n  handleEvent(eventlet) {\n    return this.atom?.handleEvent(eventlet);\n  }\n}\n"],
  "mappings": "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",
  "names": ["logKinds", "importantKinds", "formatter", "preamble", "bg", "color", "style", "logs", "createLogFactory", "flags", "logf", "format", "make", "kind", "args", "when", "vicinity", "spot", "where", "append", "consolate", "log", "k", "o", "flag", "customFlags", "filter", "i", "floor", "pow", "random", "key", "digits", "irand", "range", "arand", "array", "prob", "probability", "makeId", "pairs", "digits", "delim", "min", "range", "result", "i", "irand", "shallowUpdate", "obj", "data", "result", "i", "value", "overage", "seen", "key", "shallowMerge", "deepMerge", "deepCopy", "datum", "element", "clone", "deepEqual", "a", "b", "type", "aProps", "bProps", "name", "deepUndefinedToNull", "prop", "O", "SafeObject", "o", "a", "keyGetter", "map", "item", "visitor", "key", "value", "create", "assign", "keys", "values", "entries", "nob", "mapBy", "PathMapper", "root", "mappings", "path", "last", "bits", "top", "meta", "depth", "localRelative", "base", "localAbsolute", "Paths", "O", "defineProperty", "setPrototypeOf", "create", "assign", "keys", "values", "entries", "mapBy", "o", "a", "keyGetter", "map", "item", "scope", "nob", "privateProperty", "initialValue", "value", "v", "Atom", "proto", "pipe", "beStateful", "inputs", "inputKey", "clean", "request", "msg", "data", "e", "methodName", "doUpdate", "state", "handler", "onhandler", "asyncMethod", "injections", "stdlib", "args", "inputName", "task", "asyncFunc", "EventEmitter", "eventName", "args", "listeners", "listener", "listenerName", "list", "index", "l", "values", "entries", "opaqueData", "log", "Decorator", "name", "data", "model", "atom", "item", "models", "maybeDecorate", "maybeFilter", "maybeCollateBy", "decorator", "inputs", "state", "immutableInputs", "deepCopy", "immutableState", "immutableModel", "decorated", "sortByLc", "filter", "impl", "collator", "collation", "collate", "collationToRenderModels", "sort", "a", "b", "key", "collateBy", "keyValue", "$template", "entries", "keys", "customLogFactory", "id", "arand", "logColors", "Host", "EventEmitter", "eventlet", "atom", "meta", "request", "Decorator", "promise", "resolve", "value", "outputModel", "renderModel", "model", "container", "template", "packet", "inputs", "lastInputs", "deepCopy", "lastOutput", "dirtyBits", "n", "v", "deepEqual", "key"]
}
